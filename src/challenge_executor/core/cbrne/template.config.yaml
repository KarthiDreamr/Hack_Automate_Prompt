base_url: "https://www.hackaprompt.com/track/pliny/pliny_2_challenge"

# General automation settings
automation_settings:
  browser_executable_path: "brave-browser-beta"
  user_data_dir: "profiles/brave-beta"
  remote_debugging_port: 9222
  browser_ws_endpoint: "http://localhost:9222"
  navigate_to_base_url: false
  loop_on_failure: true
  # Wait time (seconds) for the browser to fully launch before connecting
  browser_init_wait_sec: 5

  # Centralised timeout settings (all values in milliseconds unless noted)
  timeouts:
    prompt_visible_ms: 10000          # Wait for prompt textarea to be visible
    submit_prompt_click_ms: 5000      # Timeout for clicking the prompt submit button
    submit_for_judging_enable_ms: 180000  # Wait for 'Submit for Judging' to enable
    submit_for_judging_click_ms: 180000   # Timeout for clicking 'Submit for Judging'
    success_visible_ms: 5000          # Wait for success popup visibility
    restart_click_ms: 5000            # Timeout for clicking 'Restart Challenge' on failure
    continue_button_visible_ms: 5000  # Wait for 'Continue Current Chat' button visibility
    continue_button_click_ms: 5000    # Timeout for clicking the 'Continue' button
    polling_interval_ms: 500          # Interval between status checks (ms)
    judging_timeout_sec: 180          # Overall judging timeout (seconds)

# Agent Track Submit Configuration
# Retry configuration
retry_settings:
  max_retries: 1000
  delay_min_sec: 4
  delay_max_sec: 12
  random_delay: false

# Agent-specific timeout settings
agent_timeouts:
  submit_template_enable_ms: 30000  # Fallback timeout for button enable
  try_again_button_visible_ms: 90000  # Wait up to 90 seconds for "Try Again" button to appear
  try_again_button_click_ms: 10000    # Timeout for clicking the "Try Again" button
  polling_interval_ms: 200  # Interval for checking button state

# CSS selectors for page elements
selectors:
  textarea: 'textarea[placeholder^="Write your injection intent directly"]'
  submit_button: 'button:has-text("Submit Template")'
  try_again_button: 'button:has-text("Try Again")'

# Logging messages
logging:
  filling_textarea: "Filling intent textarea for agent-track-submit"
  waiting_submit_button: "Waiting for 'Submit Template' button to enable, then clicking"
  button_timeout_warning: "'Submit Template' button did not enable within timeout; attempting click anyway"
  waiting_try_again: "Waiting for 'Try Again' button to appear (timeout: 90s)"
  clicking_try_again: "Clicking 'Try Again' button (attempt {attempt})"
  waiting_before_next: "Waiting {delay:.2f} seconds before next attempt"
  waiting_after_error: "Waiting {delay:.2f} seconds before retrying after error"
  starting_attempt: "Starting attempt {attempt}/{max_retries}"
  reached_max_retries: "Reached maximum retries ({max_retries}). Stopping."
  error_during_attempt: "Error during attempt {attempt}: {error}"
  error_max_retries: "Reached maximum retries ({max_retries}). Stopping due to error."
  completed_retry: "Completed agent_track_submit_with_retry after {attempts} attempts"

# Browser cleanup and monitoring settings
cleanup:
  enabled: false            # Set true if you want automatic cleanup after inactivity
  inactivity_timeout:
    hours: 1
    minutes: 30
  grace_period_minutes: 5   # Wait after automation finishes before monitoring starts
  check_interval_sec: 30    # Interval between browser activity checks

# Prompts to try for the challenge
prompts:
  - file: "prompts/prompt_1.txt"
    # The script logic will handle the expected outcome, e.g., "buttons_clickable"
  - file: "prompts/prompt-1-copy.txt"
    # Complex UwU-style prompt with system instructions
  - file: "prompts/prompt-temp.txt"
    # Chinese text prompt for character removal
